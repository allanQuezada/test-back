variables:
  REGISTRY_HOST: pensotec.com:5005


build:
  stage: build
  image: docker:18-git
#  when: manual
  services:
    - docker:18-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $REGISTRY_HOST
    - cd GatewayApi
    - docker build -t $REGISTRY_HOST/$CI_PROJECT_PATH:$CI_COMMIT_SHA -t $REGISTRY_HOST/$CI_PROJECT_PATH:api-gw-test .
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH:api-gw-test
    - cd .. && cd CatalogsApi
    - docker build -t $REGISTRY_HOST/$CI_PROJECT_PATH:$CI_COMMIT_SHA -t $REGISTRY_HOST/$CI_PROJECT_PATH:api-cat-test .
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH:api-cat-test
    - cd .. && cd EmployeesApi
    - docker build -t $REGISTRY_HOST/$CI_PROJECT_PATH:$CI_COMMIT_SHA -t $REGISTRY_HOST/$CI_PROJECT_PATH:api-emp-test .
    - docker push $REGISTRY_HOST/$CI_PROJECT_PATH:api-emp-test

deploy:
  stage: deploy
  image: alpine
#  when: manual
  before_script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl version --client
    - mkdir -p $HOME/.kube && cp $KUBE_CONFIG_FILE "$HOME/.kube/config"
  script:
      - kubectl apply -f k8s/deployment.yml
#      - kubectl rollout status -f k8s/deployment.yml
      - kubectl set image deployment api-gw-deployment-test api-gw-test=$REGISTRY_HOST/$CI_PROJECT_PATH:api-gw-test --record
      - kubectl set image deployment api-cat-deployment-test api-cat-test=$REGISTRY_HOST/$CI_PROJECT_PATH:api-cat-test --record
      - kubectl set image deployment api-emp-deployment-test api-emp-test=$REGISTRY_HOST/$CI_PROJECT_PATH:api-emp-test --record
      - kubectl rollout restart deployment api-gw-deployment-test -n gitlab-managed-apps
      - kubectl rollout restart deployment api-cat-deployment-test -n gitlab-managed-apps
      - kubectl rollout restart deployment api-emp-deployment-test -n gitlab-managed-apps